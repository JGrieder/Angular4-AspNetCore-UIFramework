//
// Base styles
//

.input-group {
    position: relative;
    display: flex;
    width: 100%;

    .form-control {
        // Ensure that the input is always above the *appended* addon button for
        // proper border colors.
        position: relative;
        z-index: 2;
        flex: 1 1 auto;
        // Add width 1% and flex-basis auto to ensure that button will not wrap out
        // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
        width: 1%;
        margin-bottom: 0;
        // Bring the "active" form control to the front
        &,
        &:active,
        &:hover {
            z-index: 3;
        }

        &:hover {
            z-index: 3;
        }
    }
}

text-field-addon,
.input-group-btn,
.input-group .form-control {
    // Vertically centers the content of the addons within the input group
    display: flex;
    align-items: center;
    
    &:not(:first-child):not(:last-child) {
        border-radius: 0;
    }
}

text-field-addon,
.input-group-btn {
    white-space: nowrap;
    vertical-align: middle; // Match the inputs
}


// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .btn {
    @extend .form-control-lg;
}

.input-group-sm > .form-control,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .btn {
    @extend .form-control-sm;
}


//
// Text input groups
//

text-field-addon {
    padding: 0.5rem 0.3125rem; //8px 5px
    margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
    font-size: 0.75rem; // Match inputs
    font-weight: normal;
    line-height: 1.25rem;
    color: #262d33;
    text-align: center;
    background-color: #fff;
    border: 0.0625rem solid #e0e0e0;
    border-radius: .1875rem;
    min-width: 2.75rem;
    // Sizing
    &.form-control-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.6875rem;
        border-radius: 0.1875rem;
    }

    &.form-control-lg {
        padding: 0.5rem 1rem;
        font-size: 1rem;
        border-radius: 0.1875rem;
    }
    // scss-lint:disable QualifyingElement
    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
    // scss-lint:enable QualifyingElement
}


//
// Reset rounded corners
//

.input-group .form-control:not(:last-child),
text-field-addon:not(:last-child),
.input-group-btn:not(:last-child) > .btn,
.input-group-btn:not(:last-child) > .btn-group > .btn,
.input-group-btn:not(:last-child) > .dropdown-toggle,
.input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

text-field-addon:not(:last-child) {
    border-right: 0;
}

.input-group .form-control:not(:first-child),
text-field-addon:not(:first-child),
.input-group-btn:not(:first-child) > .btn,
.input-group-btn:not(:first-child) > .btn-group > .btn,
.input-group-btn:not(:first-child) > .dropdown-toggle,
.input-group-btn:not(:last-child) > .btn:not(:first-child),
.input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.form-control + text-field-addon:not(:first-child) {
    border-left: 0;
}

//
// Button input groups
//

.input-group-btn {
    position: relative;
    // Jankily prevent input button groups from wrapping with `white-space` and
    // `font-size` in combination with `inline-block` on buttons.
    font-size: 0;
    white-space: nowrap;
    // Negative margin for spacing, position for bringing hovered/focused/actived
    // element above the siblings.
    > .btn {
        position: relative;

        + .btn {
            margin-left: (-0.0625rem);
        }

        + .dropdown-toggle {
            padding-left: 0.3125rem;
            padding-right: 0.3125rem;
        }

        &:hover, &:active, &:focus, &.active {
            z-index: inherit;
        }
    }
    // Negative margin to only have a single, shared border between the two
    &:not(:last-child) {
        > .btn,
        > .btn-group {
            margin-right: (-0.0625rem);
        }
    }

    &:not(:first-child) {
        > .btn,
        > .btn-group {
            z-index: 2;
            margin-left: (-0.0625rem);
            // Because specificity
            &,
            &:focus,
            &:hover {
                z-index: 3;
            }
        }
    }
}
